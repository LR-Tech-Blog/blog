---
import { type CollectionEntry, getEntry, render } from "astro:content";
import type { PostData } from "../scripts/types/post_types";
import PostTypeTag from "./PostTypeBadge.astro";
import PostInfo from "./PostInfo.astro";
import type { RemarkFrontmatter } from "@/scripts/types/render_post_data";

interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;
const { author: authorPostData } = post.data;
const data: PostData = {
  id: post.id,
  ...post.data,
};

const authorEntry = await getEntry("authors", authorPostData.id);
const author = authorEntry.data;

const { remarkPluginFrontmatter } = await render(post);
const remark: RemarkFrontmatter = {
  minutesRead: remarkPluginFrontmatter.minutesRead,
};

const id = post.id
const formatedDate = data.date.toLocaleDateString("pt-br");
const { title, postType, description } = post.data;
---

<div class="flex flex-col py-4">
  <span
    class="flex sm:flex-col md:max-2xl:flex-row md:max-2xl:items-center md:max-2xl:space-x-3"
  >
    <a href={`/post/${id}`}>
      <h1 transition:name={id}>
        {title}
      </h1>
    </a>
    <span transition:name={id + postType}>
      <PostTypeTag text={postType} />
    </span>
  </span>
  <PostInfo
    author={author}
    date={formatedDate}
    minutesRead={remark.minutesRead}
  />
  <div>
    <p class="text-ellipsis overflow-hidden">
      {description}
    </p>
  </div>
</div>
