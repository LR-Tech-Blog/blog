---
import PostLayout from "../../layouts/LayoutPost.astro";
import { type CollectionEntry, getEntry } from "astro:content";
import { getPosts } from "../../scripts/content_fetcher";
import { render } from "astro:content";
import type { PostData } from "@/scripts/types/post_types";
import type { RemarkFrontmatter } from "@/scripts/types/render_post_data";

export async function getStaticPaths() {
  const postCollection = await getPosts();
  return postCollection.map((post) => {
    return {
      params: {
        slug: post.id,
      },
      props: { post },
    };
  });
}

interface Props {
  post: CollectionEntry<"posts">;
}

const { post } = Astro.props;
const { author: authorPostData } = post.data;
const postData: PostData = {
    id: post.id,
    ...post.data,
}

const authorEntry = await getEntry("authors", authorPostData.id);
const author = authorEntry.data;

const { Content, remarkPluginFrontmatter } = await render(post);
const remark: RemarkFrontmatter = {
    minutesRead: remarkPluginFrontmatter.minutesRead
}
---

<PostLayout id={post.id} post={postData} remark={remark} author={author}>
  <Content />
</PostLayout>
